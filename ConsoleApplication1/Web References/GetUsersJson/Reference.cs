//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ConsoleApplication1.GetUsersJson {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TestWebServiceSoap", Namespace="http://tempuri.org/TestWebService/TestWebService")]
    public partial class TestWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUsersXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIdXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumsXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumByIdXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumsByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIdJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumsJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumByIdJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumsByUserJsonOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TestWebService() {
            this.Url = global::ConsoleApplication1.Properties.Settings.Default.ConsoleApplication1_GetUsersJson_TestWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUsersXmlCompletedEventHandler GetUsersXmlCompleted;
        
        /// <remarks/>
        public event GetUserByIdXmlCompletedEventHandler GetUserByIdXmlCompleted;
        
        /// <remarks/>
        public event GetAlbumsXmlCompletedEventHandler GetAlbumsXmlCompleted;
        
        /// <remarks/>
        public event GetAlbumByIdXmlCompletedEventHandler GetAlbumByIdXmlCompleted;
        
        /// <remarks/>
        public event GetAlbumsByUserIdCompletedEventHandler GetAlbumsByUserIdCompleted;
        
        /// <remarks/>
        public event GetUsersJsonCompletedEventHandler GetUsersJsonCompleted;
        
        /// <remarks/>
        public event GetUserByIdJsonCompletedEventHandler GetUserByIdJsonCompleted;
        
        /// <remarks/>
        public event GetAlbumsJsonCompletedEventHandler GetAlbumsJsonCompleted;
        
        /// <remarks/>
        public event GetAlbumByIdJsonCompletedEventHandler GetAlbumByIdJsonCompleted;
        
        /// <remarks/>
        public event GetAlbumsByUserJsonCompletedEventHandler GetAlbumsByUserJsonCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetUsersXml", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetUsersXml() {
            object[] results = this.Invoke("GetUsersXml", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersXmlAsync() {
            this.GetUsersXmlAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersXmlAsync(object userState) {
            if ((this.GetUsersXmlOperationCompleted == null)) {
                this.GetUsersXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersXmlOperationCompleted);
            }
            this.InvokeAsync("GetUsersXml", new object[0], this.GetUsersXmlOperationCompleted, userState);
        }
        
        private void OnGetUsersXmlOperationCompleted(object arg) {
            if ((this.GetUsersXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersXmlCompleted(this, new GetUsersXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetUserByIdXml", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserByIdXml(int id) {
            object[] results = this.Invoke("GetUserByIdXml", new object[] {
                        id});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIdXmlAsync(int id) {
            this.GetUserByIdXmlAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUserByIdXmlAsync(int id, object userState) {
            if ((this.GetUserByIdXmlOperationCompleted == null)) {
                this.GetUserByIdXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIdXmlOperationCompleted);
            }
            this.InvokeAsync("GetUserByIdXml", new object[] {
                        id}, this.GetUserByIdXmlOperationCompleted, userState);
        }
        
        private void OnGetUserByIdXmlOperationCompleted(object arg) {
            if ((this.GetUserByIdXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIdXmlCompleted(this, new GetUserByIdXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetAlbumsXml", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Album[] GetAlbumsXml() {
            object[] results = this.Invoke("GetAlbumsXml", new object[0]);
            return ((Album[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumsXmlAsync() {
            this.GetAlbumsXmlAsync(null);
        }
        
        /// <remarks/>
        public void GetAlbumsXmlAsync(object userState) {
            if ((this.GetAlbumsXmlOperationCompleted == null)) {
                this.GetAlbumsXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumsXmlOperationCompleted);
            }
            this.InvokeAsync("GetAlbumsXml", new object[0], this.GetAlbumsXmlOperationCompleted, userState);
        }
        
        private void OnGetAlbumsXmlOperationCompleted(object arg) {
            if ((this.GetAlbumsXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumsXmlCompleted(this, new GetAlbumsXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetAlbumByIdXml", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Album GetAlbumByIdXml(int id) {
            object[] results = this.Invoke("GetAlbumByIdXml", new object[] {
                        id});
            return ((Album)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumByIdXmlAsync(int id) {
            this.GetAlbumByIdXmlAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAlbumByIdXmlAsync(int id, object userState) {
            if ((this.GetAlbumByIdXmlOperationCompleted == null)) {
                this.GetAlbumByIdXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumByIdXmlOperationCompleted);
            }
            this.InvokeAsync("GetAlbumByIdXml", new object[] {
                        id}, this.GetAlbumByIdXmlOperationCompleted, userState);
        }
        
        private void OnGetAlbumByIdXmlOperationCompleted(object arg) {
            if ((this.GetAlbumByIdXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumByIdXmlCompleted(this, new GetAlbumByIdXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetAlbumsByUserId", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Album[] GetAlbumsByUserId(int userId) {
            object[] results = this.Invoke("GetAlbumsByUserId", new object[] {
                        userId});
            return ((Album[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumsByUserIdAsync(int userId) {
            this.GetAlbumsByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAlbumsByUserIdAsync(int userId, object userState) {
            if ((this.GetAlbumsByUserIdOperationCompleted == null)) {
                this.GetAlbumsByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumsByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetAlbumsByUserId", new object[] {
                        userId}, this.GetAlbumsByUserIdOperationCompleted, userState);
        }
        
        private void OnGetAlbumsByUserIdOperationCompleted(object arg) {
            if ((this.GetAlbumsByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumsByUserIdCompleted(this, new GetAlbumsByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetUsersJson", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUsersJson() {
            object[] results = this.Invoke("GetUsersJson", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersJsonAsync() {
            this.GetUsersJsonAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersJsonAsync(object userState) {
            if ((this.GetUsersJsonOperationCompleted == null)) {
                this.GetUsersJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersJsonOperationCompleted);
            }
            this.InvokeAsync("GetUsersJson", new object[0], this.GetUsersJsonOperationCompleted, userState);
        }
        
        private void OnGetUsersJsonOperationCompleted(object arg) {
            if ((this.GetUsersJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersJsonCompleted(this, new GetUsersJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetUserByIdJson", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserByIdJson(int id) {
            object[] results = this.Invoke("GetUserByIdJson", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIdJsonAsync(int id) {
            this.GetUserByIdJsonAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUserByIdJsonAsync(int id, object userState) {
            if ((this.GetUserByIdJsonOperationCompleted == null)) {
                this.GetUserByIdJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIdJsonOperationCompleted);
            }
            this.InvokeAsync("GetUserByIdJson", new object[] {
                        id}, this.GetUserByIdJsonOperationCompleted, userState);
        }
        
        private void OnGetUserByIdJsonOperationCompleted(object arg) {
            if ((this.GetUserByIdJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIdJsonCompleted(this, new GetUserByIdJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetAlbumsJson", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAlbumsJson() {
            object[] results = this.Invoke("GetAlbumsJson", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumsJsonAsync() {
            this.GetAlbumsJsonAsync(null);
        }
        
        /// <remarks/>
        public void GetAlbumsJsonAsync(object userState) {
            if ((this.GetAlbumsJsonOperationCompleted == null)) {
                this.GetAlbumsJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumsJsonOperationCompleted);
            }
            this.InvokeAsync("GetAlbumsJson", new object[0], this.GetAlbumsJsonOperationCompleted, userState);
        }
        
        private void OnGetAlbumsJsonOperationCompleted(object arg) {
            if ((this.GetAlbumsJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumsJsonCompleted(this, new GetAlbumsJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetAlbumByIdJson", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAlbumByIdJson(int id) {
            object[] results = this.Invoke("GetAlbumByIdJson", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumByIdJsonAsync(int id) {
            this.GetAlbumByIdJsonAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAlbumByIdJsonAsync(int id, object userState) {
            if ((this.GetAlbumByIdJsonOperationCompleted == null)) {
                this.GetAlbumByIdJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumByIdJsonOperationCompleted);
            }
            this.InvokeAsync("GetAlbumByIdJson", new object[] {
                        id}, this.GetAlbumByIdJsonOperationCompleted, userState);
        }
        
        private void OnGetAlbumByIdJsonOperationCompleted(object arg) {
            if ((this.GetAlbumByIdJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumByIdJsonCompleted(this, new GetAlbumByIdJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWebService/TestWebService/GetAlbumsByUserJson", RequestNamespace="http://tempuri.org/TestWebService/TestWebService", ResponseNamespace="http://tempuri.org/TestWebService/TestWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAlbumsByUserJson(int userId) {
            object[] results = this.Invoke("GetAlbumsByUserJson", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumsByUserJsonAsync(int userId) {
            this.GetAlbumsByUserJsonAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAlbumsByUserJsonAsync(int userId, object userState) {
            if ((this.GetAlbumsByUserJsonOperationCompleted == null)) {
                this.GetAlbumsByUserJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumsByUserJsonOperationCompleted);
            }
            this.InvokeAsync("GetAlbumsByUserJson", new object[] {
                        userId}, this.GetAlbumsByUserJsonOperationCompleted, userState);
        }
        
        private void OnGetAlbumsByUserJsonOperationCompleted(object arg) {
            if ((this.GetAlbumsByUserJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumsByUserJsonCompleted(this, new GetAlbumsByUserJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/TestWebService/TestWebService")]
    public partial class User {
        
        private int idField;
        
        private string nameField;
        
        private string usernameField;
        
        private string emailField;
        
        private string phoneField;
        
        private string websiteField;
        
        private Address addressField;
        
        private Company companyField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public Address address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public Company company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/TestWebService/TestWebService")]
    public partial class Address {
        
        private string streetField;
        
        private string suiteField;
        
        private string cityField;
        
        private string zipcodeField;
        
        private Geo geoField;
        
        /// <remarks/>
        public string street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string suite {
            get {
                return this.suiteField;
            }
            set {
                this.suiteField = value;
            }
        }
        
        /// <remarks/>
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
        
        /// <remarks/>
        public Geo geo {
            get {
                return this.geoField;
            }
            set {
                this.geoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/TestWebService/TestWebService")]
    public partial class Geo {
        
        private double latField;
        
        private double lngField;
        
        /// <remarks/>
        public double lat {
            get {
                return this.latField;
            }
            set {
                this.latField = value;
            }
        }
        
        /// <remarks/>
        public double lng {
            get {
                return this.lngField;
            }
            set {
                this.lngField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/TestWebService/TestWebService")]
    public partial class Album {
        
        private int idField;
        
        private int userIdField;
        
        private string titleField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/TestWebService/TestWebService")]
    public partial class Company {
        
        private string nameField;
        
        private string catchPhraseField;
        
        private string bsField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string catchPhrase {
            get {
                return this.catchPhraseField;
            }
            set {
                this.catchPhraseField = value;
            }
        }
        
        /// <remarks/>
        public string bs {
            get {
                return this.bsField;
            }
            set {
                this.bsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetUsersXmlCompletedEventHandler(object sender, GetUsersXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetUserByIdXmlCompletedEventHandler(object sender, GetUserByIdXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIdXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIdXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetAlbumsXmlCompletedEventHandler(object sender, GetAlbumsXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumsXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumsXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Album[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Album[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetAlbumByIdXmlCompletedEventHandler(object sender, GetAlbumByIdXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumByIdXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumByIdXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Album Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Album)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetAlbumsByUserIdCompletedEventHandler(object sender, GetAlbumsByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumsByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumsByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Album[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Album[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetUsersJsonCompletedEventHandler(object sender, GetUsersJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetUserByIdJsonCompletedEventHandler(object sender, GetUserByIdJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIdJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIdJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetAlbumsJsonCompletedEventHandler(object sender, GetAlbumsJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumsJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumsJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetAlbumByIdJsonCompletedEventHandler(object sender, GetAlbumByIdJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumByIdJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumByIdJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void GetAlbumsByUserJsonCompletedEventHandler(object sender, GetAlbumsByUserJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumsByUserJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumsByUserJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591